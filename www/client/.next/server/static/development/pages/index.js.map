{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///webpack/bootstrap","webpack:///./api/bots/dev/getId.ts","webpack:///./api/bots/executeSupervisor.ts","webpack:///./api/bots/getSupervisors.ts","webpack:///./api/fetch.ts","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js","webpack:///./pages/index.tsx","webpack:///external \"@material-ui/core\"","webpack:///external \"@material-ui/styles\"","webpack:///external \"core-js/library/fn/json/stringify\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import fetch from '../../fetch'\r\n\r\nexport default async () => {\r\n  const body = await fetch(`/bots/dev`)\r\n  const { id } = await body.json()\r\n  return id\r\n}","import fetch from '../fetch'\r\n\r\nexport default async (id: string, name: string, payload: any) => {\r\n  const body = await fetch(`/bots/${id}/executeSupervisor`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ name, payload })\r\n  })\r\n  const { result } = await body.json()\r\n  \r\n  return result\r\n}","import fetch from '../fetch'\r\n\r\nexport default async (id: string) => {\r\n  const body = await fetch(`/bots/${id}/getSupervisors`)\r\n  const supervisors = await body.json()\r\n  \r\n  return supervisors\r\n}","export default (path: string, props?: object) => {\r\n  path = `http://localhost:8080${path}`\r\n  return fetch(path, props)\r\n}","module.exports = require(\"core-js/library/fn/json/stringify\");","import { Container, CssBaseline, Theme, Button, Typography, Avatar, Paper, Grid, Input, TextField, Card, CardContent } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport MessageIcon from '@material-ui/icons/Message'\r\nimport { useState, useEffect, useMemo } from 'react'\r\nimport getId from '../api/bots/dev/getId'\r\nimport getSupervisors from '../api/bots/getSupervisors'\r\nimport executeSupervisor from '../api/bots/executeSupervisor'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}))\r\n\r\nconst createSupervisionExecutor = (id: string) =>\r\n  ({ name, arity }: { name: string, arity: number }) =>\r\n    () =>\r\n      executeSupervisor(id, name, arity === 0 ? undefined : prompt('Podaj wartość'))\r\n\r\nexport default () => {\r\n  const [id, setId] = useState(null)\r\n  const [supervisors, setSupervisors] = useState([])\r\n\r\n  useEffect(() => void (id && getSupervisors(id).then(setSupervisors)), [id])\r\n\r\n  useEffect(() => void getId().then(setId), [])\r\n\r\n  const supervisionExecutor = useMemo(() => createSupervisionExecutor(id), [id])\r\n\r\n  const classes = useStyles({})\r\n\r\n  return (\r\n    <Container>\r\n      <CssBaseline />\r\n      <Card>\r\n        <CardContent>\r\n          <Typography variant=\"h3\" gutterBottom>Bociak</Typography>\r\n          {\r\n            supervisors.map(({ name, title, arity }) =>\r\n              <Button variant=\"contained\" key={name} onClick={supervisionExecutor({ name, arity })} className={classes.button}>\r\n              {\r\n                title\r\n              }\r\n              </Button>\r\n            )\r\n          }\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\n\r\n/*\r\nexport default () => {\r\n  const [login, setLogin] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [botStatus, setBotStatus] = useState(BotStatus.NotChecked)\r\n  const [supervisors, setSupervisors] = useState([])\r\n  const classes = useStyles({})\r\n\r\n  useEffect(() => {\r\n    const checkBotStatus = async () => {\r\n      const isRunning = await (await fetch(`${getServerUrl()}/dev/isRunning`)).json()\r\n      setBotStatus(isRunning\r\n        ? BotStatus.Running\r\n        : BotStatus.Stopped\r\n      )\r\n    }\r\n\r\n    checkBotStatus()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(botStatus !== BotStatus.Running)\r\n      return\r\n\r\n    const updateSupervisors = async () => {\r\n      try {\r\n        setSupervisors(\r\n          await (await fetch(`${getServerUrl()}/dev/supervisors`)).json()\r\n        )\r\n      } catch(error){\r\n        return\r\n      }\r\n    }\r\n\r\n    updateSupervisors()\r\n  }, [botStatus])\r\n\r\n  const startBot = async () => {\r\n    setBotStatus(BotStatus.Starting)\r\n    await fetch(`${getServerUrl()}/dev/start`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({ login, password }),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    })\r\n    setBotStatus(BotStatus.Running)\r\n  }\r\n\r\n  const exitBot = () => {\r\n    fetch(`${getServerUrl()}/dev/exit`, { method: 'POST' })\r\n    setBotStatus(BotStatus.Stopped)\r\n  }\r\n\r\n  const execute = ({ name, arity }: { name: string, arity: number }) => async () => {\r\n    const payload = (() => {\r\n      if(arity === 0)\r\n        return undefined\r\n\r\n      const arg = prompt('Podaj argument')\r\n      if(Number.isNaN(Number(arg)))\r\n        return arg \r\n\r\n      return parseInt(arg)\r\n    })()\r\n\r\n    const response = await fetch(`${getServerUrl()}/dev/executeSupervisor`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({ name, payload } as BotCommandDto),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    })\r\n    const result = await response.text()\r\n    if(result)\r\n      alert(result)\r\n  }\r\n\r\n  return ( \r\n    <>\r\n      <CssBaseline />\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <Paper className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <SettingsIcon />\r\n          </Avatar>\r\n          <Typography variant=\"h5\" component=\"h1\">\r\n            Panel sterowania\r\n          </Typography>\r\n          {\r\n            botStatus === BotStatus.NotChecked || botStatus === BotStatus.Starting\r\n              ? (\r\n                <Button variant=\"contained\" color=\"primary\" className={classes.runButton} disabled>\r\n                  Uruchom bota\r\n                </Button>\r\n              ) : botStatus === BotStatus.Running\r\n                ? (\r\n                  <Button variant=\"contained\" color=\"primary\" className={classes.runButton} onClick={exitBot}>\r\n                    Wyłącz bota\r\n                  </Button>\r\n                ) : (\r\n                  <>\r\n                    <p>\r\n                      <TextField\r\n                        label=\"Login\"\r\n                        value={login}\r\n                        onChange={e => setLogin(e.target.value)}\r\n                      />\r\n                      <TextField\r\n                        type=\"password\"\r\n                        label=\"Hasło\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                      />\r\n                    </p>\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.runButton} onClick={startBot}>\r\n                      Uruchom bota\r\n                    </Button>\r\n                  </>\r\n                )\r\n          }\r\n          {\r\n            supervisors.length !== 0 && botStatus === BotStatus.Running && (\r\n              <Grid container>\r\n                <Grid item xs className={classes.list}>\r\n                  <Typography variant=\"caption\" gutterBottom>Opcje</Typography>\r\n                  {\r\n                    supervisors.map(({ name, title, arity }) =>\r\n                      <Button \r\n                        variant=\"contained\" \r\n                        className={classes.listButton} \r\n                        key={name} \r\n                        onClick={execute({ name, arity })}\r\n                        {...arity !== 0 && { endIcon: <MessageIcon /> }}\r\n                      >\r\n                      {\r\n                        title\r\n                      }\r\n                      </Button>\r\n                    )\r\n                  }\r\n                </Grid>\r\n              </Grid>\r\n            )\r\n          }\r\n        </Paper>\r\n      </Container>\r\n    </>\r\n  )\r\n}*/","module.exports = require(\"@material-ui/core\");","module.exports = require(\"@material-ui/styles\");","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"react\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;ACNA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;ACXA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;ACPA;AAAA;AACA;AACA;AACA;;;;;;;;;;;ACHA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AADA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}