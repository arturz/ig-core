{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Number$isNaN from \"@babel/runtime-corejs2/core-js/number/is-nan\";\nvar _jsxFileName = \"C:\\\\Users\\\\Artur\\\\Documents\\\\Node\\\\Insta\\\\www\\\\client\\\\pages\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Container, CssBaseline, Button, Typography, Avatar, Paper, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport MessageIcon from '@material-ui/icons/Message';\nimport fetch from 'isomorphic-unfetch';\nimport { useState, useEffect } from 'react';\nimport getServerUrl from '../config/getServerUrl';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(8),\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    margin: theme.spacing(1)\n  },\n  runButton: {\n    display: 'block',\n    margin: theme.spacing(2, 0, 2),\n    width: '100%'\n  },\n  list: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: theme.spacing(0, 1),\n    marginBottom: theme.spacing(1)\n  },\n  listButton: {\n    marginBottom: theme.spacing(1)\n  }\n}));\nexport default (() => {\n  const {\n    0: running,\n    1: setRunning\n  } = useState(null);\n  const {\n    0: supervisors,\n    1: setSupervisors\n  } = useState([]);\n  const classes = useStyles({});\n  useEffect(() => {\n    const checkRunning = async () => {\n      const {\n        running\n      } = await (await fetch(`${getServerUrl()}/dev`)).json();\n      setRunning(running);\n    };\n\n    checkRunning();\n  }, []);\n  useEffect(() => {\n    const updateSupervisors = async () => {\n      try {\n        setSupervisors((await (await fetch(`${getServerUrl()}/dev/supervisors`)).json()));\n      } catch (error) {\n        return;\n      }\n    };\n\n    updateSupervisors();\n  }, [running]);\n\n  const startBot = async () => {\n    await fetch(`${getServerUrl()}/dev/start`, {\n      method: 'POST'\n    });\n    setRunning(true);\n  };\n\n  const exitBot = () => {\n    fetch(`${getServerUrl()}/dev/exit`, {\n      method: 'POST'\n    });\n    setRunning(false);\n  };\n\n  const execute = ({\n    name,\n    arity\n  }) => async () => {\n    const payload = (() => {\n      if (arity === 0) return undefined;\n      const arg = prompt('Podaj argument');\n      if (_Number$isNaN(Number(arg))) return arg;\n      return _parseInt(arg);\n    })();\n\n    const response = await fetch(`${getServerUrl()}/dev/execute`, {\n      method: 'POST',\n      body: _JSON$stringify({\n        type: name,\n        payload\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const result = await response.text();\n    if (result) alert(result);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), __jsx(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(SettingsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), __jsx(Typography, {\n    variant: \"h5\",\n    component: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Panel sterowania\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, running === null ? __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.runButton,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Uruchom bota\") : running ? __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.runButton,\n    onClick: exitBot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Wy\\u0142\\u0105cz bota\") : __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.runButton,\n    onClick: startBot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Uruchom bota\")), supervisors.length !== 0 && __jsx(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: true,\n    className: classes.list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"caption\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Opcje\"), supervisors.map(({\n    name,\n    title,\n    arity\n  }) => __jsx(Button, _extends({\n    variant: \"contained\",\n    className: classes.listButton,\n    key: name,\n    onClick: execute({\n      name,\n      arity\n    })\n  }, arity !== 0 && {\n    endIcon: __jsx(MessageIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), title)))))));\n});","map":{"version":3,"sources":["C:/Users/Artur/Documents/Node/Insta/www/client/pages/index.tsx"],"names":["Container","CssBaseline","Button","Typography","Avatar","Paper","Grid","makeStyles","SettingsIcon","MessageIcon","fetch","useState","useEffect","getServerUrl","useStyles","theme","paper","marginTop","spacing","marginBottom","padding","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","margin","runButton","width","list","listButton","running","setRunning","supervisors","setSupervisors","classes","checkRunning","json","updateSupervisors","error","startBot","method","exitBot","execute","name","arity","payload","undefined","arg","prompt","Number","response","body","type","headers","result","text","alert","length","map","title","endIcon"],"mappings":"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","sourcesContent":["import { Container, CssBaseline, Theme, Button, Typography, Avatar, Paper, Grid } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport MessageIcon from '@material-ui/icons/Message'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport { useState, useEffect } from 'react'\r\nimport getServerUrl from '../config/getServerUrl'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(8),\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },  \r\n  avatar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    margin: theme.spacing(1)\r\n  },\r\n  runButton: {\r\n    display: 'block',\r\n    margin: theme.spacing(2, 0, 2),\r\n    width: '100%'\r\n  },\r\n  list: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: theme.spacing(0, 1),\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  listButton: {\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}))\r\n\r\nexport default () => {\r\n  const [running, setRunning] = useState(null)\r\n  const [supervisors, setSupervisors] = useState([])\r\n  const classes = useStyles({})\r\n\r\n  useEffect(() => {\r\n    const checkRunning = async () => {\r\n      const { running } = await (await fetch(`${getServerUrl()}/dev`)).json()\r\n      setRunning(running)\r\n    }\r\n\r\n    checkRunning()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const updateSupervisors = async () => {\r\n      try {\r\n        setSupervisors(\r\n          await (await fetch(`${getServerUrl()}/dev/supervisors`)).json()\r\n        )\r\n      } catch(error){\r\n        return\r\n      }\r\n    }\r\n\r\n    updateSupervisors()\r\n  }, [running])\r\n\r\n  const startBot = async () => {\r\n    await fetch(`${getServerUrl()}/dev/start`, { method: 'POST' })\r\n    setRunning(true)\r\n  }\r\n\r\n  const exitBot = () => {\r\n    fetch(`${getServerUrl()}/dev/exit`, { method: 'POST' })\r\n    setRunning(false)\r\n  }\r\n\r\n  const execute = ({ name, arity }: { name: string, arity: number }) => async () => {\r\n    const payload = (() => {\r\n      if(arity === 0)\r\n        return undefined\r\n\r\n      const arg = prompt('Podaj argument')\r\n      if(Number.isNaN(Number(arg)))\r\n        return arg \r\n\r\n      return parseInt(arg)\r\n    })()\r\n\r\n    const response = await fetch(`${getServerUrl()}/dev/execute`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({ type: name, payload }),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    })\r\n    const result = await response.text()\r\n    if(result)\r\n      alert(result)\r\n  }\r\n\r\n  return ( \r\n    <>\r\n      <CssBaseline />\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <Paper className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <SettingsIcon />\r\n          </Avatar>\r\n          <Typography variant=\"h5\" component=\"h1\">\r\n            Panel sterowania\r\n          </Typography>\r\n          <div>\r\n          {\r\n            running === null\r\n              ? (\r\n                <Button variant=\"contained\" color=\"primary\" className={classes.runButton} disabled>\r\n                  Uruchom bota\r\n                </Button>\r\n              ) : running\r\n                ? (\r\n                  <Button variant=\"contained\" color=\"primary\" className={classes.runButton} onClick={exitBot}>\r\n                    Wyłącz bota\r\n                  </Button>\r\n                ) : (\r\n                  <Button variant=\"contained\" color=\"primary\" className={classes.runButton} onClick={startBot}>\r\n                    Uruchom bota\r\n                  </Button>\r\n                )\r\n          }\r\n          </div>\r\n          {\r\n            supervisors.length !== 0 && (\r\n              <Grid container>\r\n                <Grid item xs className={classes.list}>\r\n                  <Typography variant=\"caption\" gutterBottom>Opcje</Typography>\r\n                  {\r\n                    supervisors.map(({ name, title, arity }) =>\r\n                      <Button \r\n                        variant=\"contained\" \r\n                        className={classes.listButton} \r\n                        key={name} \r\n                        onClick={execute({ name, arity })}\r\n                        {...arity !== 0 && { endIcon: <MessageIcon /> }}\r\n                      >\r\n                      {\r\n                        title\r\n                      }\r\n                      </Button>\r\n                    )\r\n                  }\r\n                </Grid>\r\n              </Grid>\r\n            )\r\n          }\r\n        </Paper>\r\n      </Container>\r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}